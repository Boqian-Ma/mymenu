{
    "swagger": "2.0",
    "info": {
        "description": "Restaurants and customers and other great things!",
        "title": "COMP3900 - JAMAR",
        "contact": {},
        "license": {},
        "version": "0.1"
    },
    "host": "localhost:5000",
    "basePath": "/api/v1",
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "We all know what /login does",
                "parameters": [
                    {
                        "description": "The user's login details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/users.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate Account",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login/guest": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "We all know what /login does, this does that for a guest",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/users.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate Account",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Logs out the current user and invalidates the session token",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate Account",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/order": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Gets a list of orders depending on the query parameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "If supplied by user, only return orders made by this table",
                        "name": "res_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "If supplied by user, only return orders made by this specific user",
                        "name": "table_num",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/orders.GetItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Gets a list of orders depending on the query parameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "If supplied by user, only return orders made by this restaurant",
                        "name": "res_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "If supplied by user, only return orders made by this specific user",
                        "name": "usr_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "If supplied, return a list of order based on the status code. Should only be used by restaurant",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/orders.GetListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Creates a order. Used by both customer and users",
                "parameters": [
                    {
                        "description": "The new order's details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orders.CreateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/orders.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders/{ord_id}": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Updates an order item in an order.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the order",
                        "name": "ord_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The order item's details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orders.UpdateOrderItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/orders.OrderItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Creates a new order item in an order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the order",
                        "name": "ord_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/orders.OrderItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders/{ord_id}/cancel": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Sets an order status to \"canceled\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the order",
                        "name": "ord_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The order's updated details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orders.UpdateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/orders.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders/{ord_id}/complete": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Sets an order status to \"completed\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the order",
                        "name": "ord_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The order's updated details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orders.UpdateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/orders.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders/{ord_id}/cook": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Sets an order status to \"served\"",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the order",
                        "name": "ord_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The order's updated details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orders.UpdateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/orders.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders/{ord_id}/items/{itm_id}": {
            "delete": {
                "tags": [
                    "Orders"
                ],
                "summary": "Deletes an order item from an order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the order",
                        "name": "ord_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The id of the item in the order",
                        "name": "itm_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The order item's details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orders.UpdateOrderItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/orders.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/orders/{ord_id}/move": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Updates an order",
                "parameters": [
                    {
                        "description": "Move an order to different table",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orders.MoveOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/orders.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/recommended-restaurants": {
            "get": {
                "description": "By default returns all restaurants recommended based on this user's previous order history. For detailed explaination, please read our software report",
                "tags": [
                    "Restaurants"
                ],
                "summary": "Returns a list of restaurants, recommended for this specific user",
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/restaurants.ListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Used to register a new user account",
                "parameters": [
                    {
                        "description": "The new user's details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/users.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate Account",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reset": {
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Used to update the password of a user",
                "parameters": [
                    {
                        "description": "The new user's details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Duplicate Account",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants": {
            "get": {
                "description": "By default returns all restaurants in the system but managers can use the `mine=true` query param to only return restaurants they manage",
                "tags": [
                    "Restaurants"
                ],
                "summary": "Returns a list of restaurants",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "If it's true, only return restaurants managed by the user",
                        "name": "mine",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/restaurants.ListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Creates a new restaurant attached to the user's account",
                "parameters": [
                    {
                        "description": "The new restaurant's details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/restaurants.CreateRestaurantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/restaurants.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Returns the details for the specified restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.Restaurant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Updates a restaurant's details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The restaurant's updated details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/restaurants.UpdateRestaurantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.Restaurant"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}/categories": {
            "get": {
                "tags": [
                    "MenuItems"
                ],
                "summary": "Gets all menu item categories associated to a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/categories.ListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "MenuItems"
                ],
                "summary": "Creates a new menu item category for a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/categories.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}/categories/{cat_id}": {
            "get": {
                "tags": [
                    "MenuItems"
                ],
                "summary": "Returns a category from an id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The id of the category",
                        "name": "cat_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/categories.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}/menu": {
            "get": {
                "description": "Returns this restaurant's current displayed menu. It is used by customers only",
                "tags": [
                    "MenuItems"
                ],
                "summary": "Gets a restaurant's current visiable menu items",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/menu_items.GetListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}/menu_items": {
            "get": {
                "tags": [
                    "MenuItems"
                ],
                "summary": "Gets all menu items associated to a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/menu_items.GetListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "MenuItems"
                ],
                "summary": "Creates a new menu item for a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/menu_items.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}/menu_items/{itm_id}": {
            "get": {
                "tags": [
                    "MenuItems"
                ],
                "summary": "Get a menu item's details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The id of the item",
                        "name": "itm_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/menu_items.GetItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MenuItems"
                ],
                "summary": "Updates a menu item for a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The id of the item",
                        "name": "itm_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The menu_item's updated details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/menu_items.UpdateMenuItemRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/menu_items.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}/report": {
            "get": {
                "tags": [
                    "Restaurants"
                ],
                "summary": "Returns the details for the specified restaurant. Currently only support \"home\" as a type.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "type of report",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.HomePageReport"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}/tables": {
            "get": {
                "tags": [
                    "Tables"
                ],
                "summary": "Gets all tables associated to a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/tables.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tables"
                ],
                "summary": "Creates a new table for a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The table's details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tables.CreateTableRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/tables.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}/tables/{tbl_num}": {
            "get": {
                "tags": [
                    "Tables"
                ],
                "summary": "Get a table's details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The id of the table",
                        "name": "tbl_num",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/tables.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tables"
                ],
                "summary": "Updates a table for a restaurant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The id of the table",
                        "name": "tbl_num",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The table's updated details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tables.UpdateTableRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/tables.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}/tables/{tbl_num}/free": {
            "post": {
                "tags": [
                    "Tables"
                ],
                "summary": "Frees a table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The id of the table",
                        "name": "tbl_num",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/tables.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/restaurants/{res_id}/tables/{tbl_num}/occupy": {
            "post": {
                "tags": [
                    "Tables"
                ],
                "summary": "Occupies a table",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the restaurant",
                        "name": "res_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The id of the table",
                        "name": "tbl_num",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/tables.ItemResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Returns the details for the specified user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the user, or current for the currently authenticated user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates a user's details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The id of the user, or current for the currently authenticated user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errors.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "categories.ItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entity.MenuItemCategory"
                }
            }
        },
        "categories.ListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.MenuItemCategory"
                    }
                }
            }
        },
        "entity.HomePageReport": {
            "type": "object",
            "properties": {
                "all_time": {
                    "type": "object",
                    "$ref": "#/definitions/entity.HomePageReportItem"
                },
                "daily": {
                    "type": "object",
                    "$ref": "#/definitions/entity.HomePageReportItem"
                },
                "generated_at": {
                    "type": "string"
                },
                "monthly": {
                    "type": "object",
                    "$ref": "#/definitions/entity.HomePageReportItem"
                },
                "quarterly": {
                    "type": "object",
                    "$ref": "#/definitions/entity.HomePageReportItem"
                },
                "weekly": {
                    "type": "object",
                    "$ref": "#/definitions/entity.HomePageReportItem"
                },
                "yearly": {
                    "type": "object",
                    "$ref": "#/definitions/entity.HomePageReportItem"
                }
            }
        },
        "entity.HomePageReportItem": {
            "type": "object",
            "properties": {
                "most_ordered_category": {
                    "type": "object",
                    "$ref": "#/definitions/entity.MenuItemCategory"
                },
                "most_ordered_item": {
                    "type": "object",
                    "$ref": "#/definitions/entity.MenuItem"
                },
                "most_ordered_item_quantity": {
                    "type": "integer"
                },
                "total_revenue": {
                    "type": "number"
                }
            }
        },
        "entity.MenuItem": {
            "type": "object",
            "properties": {
                "allergy": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_menu": {
                    "type": "boolean"
                },
                "is_special": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "entity.MenuItemCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.MenuItemResult": {
            "type": "object",
            "properties": {
                "allergy": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "category_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_menu": {
                    "type": "boolean"
                },
                "is_special": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "entity.Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OrderItem"
                    }
                },
                "restaurant_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "table_num": {
                    "type": "integer"
                },
                "total_cost": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entity.OrderItem": {
            "type": "object",
            "properties": {
                "item_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "entity.OrderItemResult": {
            "type": "object",
            "properties": {
                "item_id": {
                    "type": "string"
                },
                "item_name": {
                    "type": "string"
                },
                "item_price": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "entity.OrderResult": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OrderItemResult"
                    }
                },
                "restaurant_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "table_num": {
                    "type": "integer"
                },
                "total_cost": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "entity.Restaurant": {
            "type": "object",
            "properties": {
                "businessHours": {
                    "type": "string"
                },
                "cuisine": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "res_abc123d"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "entity.Table": {
            "type": "object",
            "properties": {
                "num_seats": {
                    "type": "integer"
                },
                "restaurant_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "table_num": {
                    "type": "integer"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "accountType": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "$ref": "#/definitions/entity.UserDetails"
                },
                "id": {
                    "type": "string",
                    "example": "usr_abc123d"
                }
            }
        },
        "entity.UserDetails": {
            "type": "object",
            "properties": {
                "allergy": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "errors.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "menu_items.CreateMenuItemRequest": {
            "type": "object",
            "properties": {
                "allergy": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "is_menu": {
                    "type": "boolean"
                },
                "is_special": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "menu_items.GetItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entity.MenuItemResult"
                }
            }
        },
        "menu_items.GetListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.MenuItemResult"
                    }
                }
            }
        },
        "menu_items.ItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entity.MenuItem"
                }
            }
        },
        "menu_items.UpdateMenuItemRequest": {
            "$ref": "#/definitions/menu_items.CreateMenuItemRequest"
        },
        "orders.CreateOrderItemRequest": {
            "type": "object",
            "properties": {
                "item_id": {
                    "type": "string"
                },
                "order_id": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "restaurant_id": {
                    "type": "string"
                }
            }
        },
        "orders.CreateOrderRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "restaurant_id": {
                    "type": "string"
                },
                "table_num": {
                    "type": "integer"
                }
            }
        },
        "orders.GetItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entity.OrderResult"
                }
            }
        },
        "orders.GetListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OrderResult"
                    }
                }
            }
        },
        "orders.ItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Order"
                }
            }
        },
        "orders.MoveOrderRequest": {
            "type": "object",
            "properties": {
                "new_table_number": {
                    "type": "integer"
                },
                "restaurant_id": {
                    "type": "string"
                }
            }
        },
        "orders.OrderItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entity.OrderItem"
                }
            }
        },
        "orders.UpdateOrderItemRequest": {
            "$ref": "#/definitions/orders.CreateOrderItemRequest"
        },
        "orders.UpdateOrderRequest": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "restaurant_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "table_num": {
                    "type": "integer"
                }
            }
        },
        "restaurants.CreateRestaurantRequest": {
            "type": "object",
            "properties": {
                "businessHours": {
                    "type": "string"
                },
                "cuisine": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "file": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "restaurants.ItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Restaurant"
                }
            }
        },
        "restaurants.ListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Restaurant"
                    }
                }
            }
        },
        "restaurants.UpdateRestaurantRequest": {
            "$ref": "#/definitions/restaurants.CreateRestaurantRequest"
        },
        "tables.CreateTableRequest": {
            "type": "object",
            "properties": {
                "num_seats": {
                    "type": "integer"
                },
                "table_num": {
                    "type": "integer"
                }
            }
        },
        "tables.ItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/entity.Table"
                }
            }
        },
        "tables.UpdateTableRequest": {
            "type": "object",
            "properties": {
                "num_seats": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "users.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "users.RegisterUserRequest": {
            "type": "object",
            "properties": {
                "accountType": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "$ref": "#/definitions/users.UpdateUserDetailsRequest"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "users.ResetPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                }
            }
        },
        "users.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "users.UpdateUserDetailsRequest": {
            "type": "object",
            "properties": {
                "allergy": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}